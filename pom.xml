<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>org.maxur</groupId>
    <artifactId>maxur-base</artifactId>
    <version>1.01</version>
    <packaging>pom</packaging>

    <inceptionYear>2015</inceptionYear>

    <url>http://myunusov.github.io/maxur-base/</url>

    <name>Base POM</name>

    <description>Parent POM.xml with most oftenly used pre-configured features</description>

    <properties>
        <env>dev</env>
        <project.root>.</project.root>
        <snapshot.allowed.artifacts>org.maxur:*</snapshot.allowed.artifacts>

        <require.maven.version>3.0.4</require.maven.version>

        <project.jdk>1.8</project.jdk>
        <project.source.compile>${project.jdk}</project.source.compile>
        <project.target.compile>${project.jdk}</project.target.compile>

        <kotlin.version>1.1.3</kotlin.version>
        <kotlin.compiler.incremental>true</kotlin.compiler.incremental>
        <kotlin.compiler.jvmTarget>${project.jdk}</kotlin.compiler.jvmTarget>

        <project.source.encoding>UTF-8</project.source.encoding>
        <project.build.sourceEncoding>${project.source.encoding}</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${project.source.encoding}</project.reporting.outputEncoding>
        <!--
        ISO 8601, see http://en.wikipedia.org/wiki/ISO_8601. This
        property is defined in order to give us an ability to use ${maven.build.timestamp}
        later in the file
        -->
        <maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>

        <github.global.server>github</github.global.server>

        <site.path>${basedir}/src/site</site.path>
        <site.skip>true</site.skip>
        <announcement.template>announcement.vm</announcement.template>

        <unit.tests.coverage.output.directory>
            ${project.reporting.outputDirectory}/jacoco-ut
        </unit.tests.coverage.output.directory>
        <integration.tests.coverage.output.directory>
            ${project.reporting.outputDirectory}/jacoco-it
        </integration.tests.coverage.output.directory>

        <annotations.version>15.0</annotations.version>
        <guava.version>22.0</guava.version>
        <objenesis.version>2.6</objenesis.version>

        <logback.version>1.2.3</logback.version>
        <log4j.version>2.8.2</log4j.version>
        <slf4j.version>1.7.25</slf4j.version>

        <junit.version>4.12</junit.version>
        <spock.version>1.1-groovy-2.4</spock.version>
        <jmockit.version>1.33</jmockit.version>
        <assertj.version>3.8.0</assertj.version>
        <hamcrest.version>1.3</hamcrest.version>
        <cglib.version>3.2.5</cglib.version>

        <groovy.version>2.4.12</groovy.version>
        <checkstyle.version>8.0</checkstyle.version>
        <velocity.version>1.7</velocity.version>
        <wagon-git.version>2.0.4</wagon-git.version>

        <!--don't update to 2.20 see https://github.com/junit-team/junit5/issues/809-->
        <maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>2.19.1</maven-failsafe-plugin.version>
        <maven-surefire-report-plugin.version>2.19.1</maven-surefire-report-plugin.version>

        <maven-filtering.version>3.1.1</maven-filtering.version>
        <maven-changes-plugin.version>2.12.1</maven-changes-plugin.version>
        <maven-checkstyle-plugin.version>2.17</maven-checkstyle-plugin.version>
        <maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
        <maven-site-plugin.version>3.6</maven-site-plugin.version>
        <maven-project-info-reports-plugin.version>2.9</maven-project-info-reports-plugin.version>
        <maven-jxr-plugin.version>2.5</maven-jxr-plugin.version>
        <maven-javadoc-plugin.version>2.10.4</maven-javadoc-plugin.version>
        <maven-plugin-plugin.version>3.5</maven-plugin-plugin.version>
        <maven-changelog-plugin.version>2.3</maven-changelog-plugin.version>
        <maven-help-plugin.version>2.2</maven-help-plugin.version>
        <maven-dependency-plugin.version>3.0.1</maven-dependency-plugin.version>
        <maven-clean-plugin.version>3.0.0</maven-clean-plugin.version>
        <maven-resources-plugin.version>3.0.2</maven-resources-plugin.version>
        <maven-compiler-plugin.version>3.6.1</maven-compiler-plugin.version>
        <maven-scm-provider-gitexe.version>1.9.5</maven-scm-provider-gitexe.version>
        <maven-jar-plugin.version>3.0.2</maven-jar-plugin.version>
        <maven-war-plugin.version>3.1.0</maven-war-plugin.version>
        <maven-assembly-plugin.version>3.0.0</maven-assembly-plugin.version>
        <maven-source-plugin.version>3.0.1</maven-source-plugin.version>
        <maven-install-plugin.version>2.5.2</maven-install-plugin.version>
        <maven-release-plugin.version>2.5.3</maven-release-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <maven-invoker-plugin.version>3.0.0</maven-invoker-plugin.version>
        <maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
        <maven-pmd-plugin.version>3.8</maven-pmd-plugin.version>
        <maven-enforcer-plugin.version>1.4.1</maven-enforcer-plugin.version>

        <build-helper-maven-plugin.version>3.0.0</build-helper-maven-plugin.version>
        <versioneye-maven-plugin.version>3.11.4</versioneye-maven-plugin.version>
        <jacoco-maven-plugin.version>0.7.9</jacoco-maven-plugin.version>
        <findbugs-maven-plugin.version>3.0.4</findbugs-maven-plugin.version>
        <properties-maven-plugin.version>1.0.0</properties-maven-plugin.version>
        <nexus-staging-maven-plugin.version>1.6.8</nexus-staging-maven-plugin.version>
        <versions-maven-plugin.version>2.4</versions-maven-plugin.version>
        <gmavenplus-plugin.version>1.5</gmavenplus-plugin.version>
        <sonar-maven-plugin.version>3.3.0.603</sonar-maven-plugin.version>
        <doxia-module-markdown.version>1.7</doxia-module-markdown.version>
        <takari-lifecycle-plugin.version>1.12.6</takari-lifecycle-plugin.version>
        <appassembler-maven-plugin.version>2.0.0</appassembler-maven-plugin.version>
        <site-maven-plugin.version>0.12</site-maven-plugin.version>
        <duplicate-finder-maven-plugin.version>1.2.1</duplicate-finder-maven-plugin.version>
        <buildnumber-maven-plugin.version>1.4</buildnumber-maven-plugin.version>
        <pitest-maven.version>1.2.2</pitest-maven.version>
    </properties>

    <organization>
        <name>Maxim Yunusov</name>
        <url>http://www.maxur.org</url>
    </organization>

    <developers>
        <developer>
            <id>myunusov</id>
            <name>Maxim</name>
            <email>myunusov@maxur.org</email>
            <url>http://www.maxur.org</url>
            <organization>Maxim Yunusov</organization>
            <organizationUrl>http://www.maxur.org</organizationUrl>
            <roles>
                <role>architect</role>
                <role>developer</role>
            </roles>
            <timezone>-6</timezone>
        </developer>
    </developers>

    <licenses>
        <license>
            <name>Apache 2</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:https://github.com/myunusov/maxur-base.git</connection>
        <developerConnection>scm:git:git@github.com:myunusov/maxur-base.git</developerConnection>
        <url>https://github.com/myunusov/maxur-base/tree/master/</url>
        <tag>HEAD</tag>
    </scm>

    <distributionManagement>
        <downloadUrl>https://oss.sonatype.org/content/groups/public</downloadUrl>
        <!-- Deploy releases -->
        <repository>
            <id>oss.sonatype.org</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
        </repository>
        <!-- Deploy snapshots -->
        <snapshotRepository>
            <id>oss.sonatype.org</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/myunusov/maxur-base/issues</url>
    </issueManagement>

    <ciManagement>
        <system>travis</system>
        <url>https://travis-ci.org/myunusov/maxur-base</url>
    </ciManagement>

    <profiles>
        <profile>
            <id>self-doc</id>
            <distributionManagement>
                <site>
                    <id>${github.global.server}</id>
                    <name>Deployment through GitHub's site deployment plugin</name>
                    <url>git:ssh://git@github.com/myunusov/maxur-base.git?gh-pages#</url>
                </site>
            </distributionManagement>
            <reporting>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-report-plugin</artifactId>
                        <configuration>
                            <skipSurefireReport>true</skipSurefireReport>
                            <showSuccess>false</showSuccess>
                        </configuration>
                    </plugin>
                </plugins>
            </reporting>
        </profile>

        <profile>
            <id>versioneye</id>
            <activation>
                <file>
                    <exists>${basedir}/src/qa/resources/versioneye.properties</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.versioneye</groupId>
                        <artifactId>versioneye-maven-plugin</artifactId>
                        <version>${versioneye-maven-plugin.version}</version>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>debug</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-help-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>maxur-help</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>active-profiles</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echoproperties/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>announcement</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>prod</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-changes-plugin</artifactId>
                        <version>${maven-changes-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>include-announcement-file</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>announcement-generate</goal>
                                </goals>
                                <configuration>
                                    <issueManagementSystems>
                                        <issueManagementSystem>GitHub</issueManagementSystem>
                                    </issueManagementSystems>
                                    <template>${announcement.template}</template>
                                    <templateDirectory>template</templateDirectory>
                                    <announcementFile>release-notes.md</announcementFile>
                                    <announcementDirectory>
                                        ${project.root}/target/generated-site/markdown
                                    </announcementDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>inspect</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>qa</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>com.puppycrawl.tools</groupId>
                                <artifactId>checkstyle</artifactId>
                                <version>${checkstyle.version}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>maxur-verify-style</id>
                                <phase>process-classes</phase>
                                <goals>
                                    <goal>checkstyle</goal>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.basepom.maven</groupId>
                        <artifactId>duplicate-finder-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>maxur-check</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <skip>false</skip>
                            <quiet>false</quiet>
                            <checkCompileClasspath>true</checkCompileClasspath>
                            <checkRuntimeClasspath>true</checkRuntimeClasspath>
                            <checkTestClasspath>true</checkTestClasspath>
                            <failBuildInCaseOfDifferentContentConflict>false</failBuildInCaseOfDifferentContentConflict>
                            <failBuildInCaseOfEqualContentConflict>false</failBuildInCaseOfEqualContentConflict>
                            <failBuildInCaseOfConflict>false</failBuildInCaseOfConflict>
                            <printEqualFiles>false</printEqualFiles>
                            <preferLocal>true</preferLocal>
                            <includeBootClasspath>false</includeBootClasspath>
                            <bootClasspathProperty>sun.boot.class.path</bootClasspathProperty>
                            <includePomProjects>false</includePomProjects>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <reporting>
                <plugins>
                    <plugin>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <version>${maven-checkstyle-plugin.version}</version>
                    </plugin>
                </plugins>
            </reporting>
        </profile>

        <profile>
            <id>kotlin</id>
            <activation>
                <file>
                    <exists>${basedir}/src/kotlin</exists>
                </file>
            </activation>
            <dependencies>
                <!-- kotlin -->
                <dependency>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-stdlib-jre8</artifactId>
                    <version>${kotlin.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-reflect</artifactId>
                    <version>${kotlin.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-test-junit</artifactId>
                    <version>${kotlin.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>kotlin-maven-plugin</artifactId>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <configuration>
                            <jvmTarget>${project.target.compile}</jvmTarget>
                        </configuration>
                        <executions>
                            <execution>
                                <id>compile</id>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                                <configuration>
                                    <sourceDirs>
                                        <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                                    </sourceDirs>
                                </configuration>
                            </execution>
                            <execution>
                                <id>test-compile</id>
                                <goals>
                                    <goal>test-compile</goal>
                                </goals>
                                <configuration>
                                    <sourceDirs>
                                        <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                                    </sourceDirs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>gh-pages</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-site-plugin</artifactId>
                        <configuration>
                            <skipDeploy>true</skipDeploy>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>com.github.github</groupId>
                        <artifactId>site-maven-plugin</artifactId>
                        <configuration>
                            <message>site for ${project.version}</message>
                            <!--<path>${site.path}</path>-->
                            <merge>true</merge>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>site-deploy</phase>
                                <goals>
                                    <goal>site</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>gpg</id>
            <activation>
                <property>
                    <name>gpg.keyname</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>${maven-gpg-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>maxur-sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>site</id>
            <properties>
                <site.path>${basedir}/src/site</site.path>
                <site.skip>false</site.skip>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>pre-site</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>Copy README.md to site/index.md</echo>
                                        <copy
                                                file="${basedir}/README.md"
                                                tofile="${basedir}/target/generated-site/markdown/index.md"
                                        />
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-site-plugin</artifactId>
                        <version>${maven-site-plugin.version}</version>
                        <dependencies>
                            <dependency>
                                <groupId>org.apache.maven.doxia</groupId>
                                <artifactId>doxia-module-markdown</artifactId>
                                <version>${doxia-module-markdown.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.apache.velocity</groupId>
                                <artifactId>velocity</artifactId>
                                <version>${velocity.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>net.trajano.wagon</groupId>
                                <artifactId>wagon-git</artifactId>
                                <version>${wagon-git.version}</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <generateReports>true</generateReports>
                            <generateSitemap>true</generateSitemap>
                            <skipDeploy>false</skipDeploy>
                            <skip>${site.skip}</skip>
                            <inputEncoding>${project.reporting.outputEncoding}</inputEncoding>
                            <outputEncoding>${project.reporting.outputEncoding}</outputEncoding>
                            <stagingDirectory>${project.root}/target/staging</stagingDirectory>
                            <siteDirectory>${site.path}</siteDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <id>maxur-attach-descriptor</id>
                                <goals>
                                    <goal>attach-descriptor</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <reporting>
                <plugins>
                    <plugin>
                        <artifactId>maven-project-info-reports-plugin</artifactId>
                        <version>${maven-project-info-reports-plugin.version}</version>
                        <configuration>
                            <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
                            <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
                            <showAvatarImages>true</showAvatarImages>
                        </configuration>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <report>index</report>
                                    <report>summary</report>
                                    <report>license</report>
                                    <report>project-team</report>
                                    <report>issue-tracking</report>
                                    <report>scm</report>
                                    <report>cim</report>
                                    <report>dependencies</report>
                                    <report>plugins</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>

                    <plugin>
                        <artifactId>maven-jxr-plugin</artifactId>
                        <version>${maven-jxr-plugin.version}</version>
                    </plugin>

                    <plugin>
                        <artifactId>maven-surefire-report-plugin</artifactId>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <report>report-only</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>

                    <plugin>
                        <!--
                        Shows reports about recent versions of plugins and deps.
                        @see http://mojo.codehaus.org/versions-maven-plugin/
                        -->
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>versions-maven-plugin</artifactId>
                        <version>${versions-maven-plugin.version}</version>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <report>dependency-updates-report</report>
                                    <report>plugin-updates-report</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>

                    <plugin>
                        <!--
                        API documentation builder. It will produce documentation
                        which is then to be used in site:site. It will be
                        located at target/site/apidocs.
                        -->
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${maven-javadoc-plugin.version}</version>
                        <configuration>
                            <failOnError>true</failOnError>
                            <quiet>true</quiet>
                            <links>
                                <link>http://download.oracle.com/javaee/6/api/</link>
                            </links>
                            <detectLinks>true</detectLinks>
                            <tags>
                                <!--
                                Here we instruct plugin to use custom tag
                                @link http://maven.apache.org/plugins/maven-javadoc-plugin/examples/tag-configuration.html
                                -->
                                <tag>
                                    <name>todo</name>
                                    <placement>a</placement>
                                    <head>To do:</head>
                                </tag>
                                <tag>
                                    <name>checkstyle</name>
                                    <placement>a</placement>
                                    <head>Suppressed Checkstyle violations:</head>
                                </tag>
                            </tags>

                            <source>${project.source.compile}</source>
                            <encoding>${project.source.encoding}</encoding>
                            <charset>${project.source.encoding}</charset>
                            <docencoding>${project.source.encoding}</docencoding>
                            <breakiterator>true</breakiterator>
                            <version>true</version>
                            <author>true</author>
                            <keywords>true</keywords>

                            <linksource>true</linksource>
                            <excludePackageNames>*.it,*.test</excludePackageNames>
                            <aggregate>true</aggregate>

                            <additionalparam>
                                -inferrel -inferdep -quiet -hide java.*
                                -collpackages java.util.* -qualify
                                -postfixpackage -nodefontsize 9
                                -nodefontpackagesize 7
                                -edgefontname "Trebuchet MS"
                                -nodefontabstractname "Trebuchet MS"
                                -nodefontclassabstractname "Trebuchet MS"
                                -nodefontclassname "Trebuchet MS"
                                -nodefontname "Trebuchet MS"
                                -nodefontpackagename "Trebuchet MS"
                                -nodefonttagname "Trebuchet MS"
                                -view
                            </additionalparam>

                        </configuration>
                        <reportSets>
                            <reportSet>
                                <id>maxur-versioned-html</id>
                                <reports>
                                    <report>javadoc</report>
                                </reports>
                                <configuration>
                                    <windowtitle>${project.name} ${project.version} API</windowtitle>
                                    <doctitle>${project.name} ${project.version} API</doctitle>
                                    <sourcepath>src/main/java</sourcepath>
                                    <destDir>apidocs-${project.version}</destDir>
                                </configuration>
                            </reportSet>
                            <reportSet>
                                <id>maxur-versioned-test</id>
                                <reports>
                                    <report>test-javadoc</report>
                                </reports>
                                <configuration>
                                    <testWindowtitle>${project.name} ${project.version} Mock API
                                    </testWindowtitle>
                                    <testDoctitle>${project.name} ${project.version} Mock API</testDoctitle>
                                    <sourcepath>src/mock/java</sourcepath>
                                    <destDir>testapidocs-${project.version}</destDir>
                                </configuration>
                            </reportSet>
                        </reportSets>
                    </plugin>

                    <plugin>
                        <artifactId>maven-plugin-plugin</artifactId>
                        <version>${maven-plugin-plugin.version}</version>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-changelog-plugin</artifactId>
                        <version>${maven-changelog-plugin.version}</version>
                        <reportSets>
                            <reportSet>
                                <id>dual-report</id>
                                <configuration>
                                    <type>range</type>
                                    <range>30</range>
                                </configuration>
                                <reports>
                                    <report>changelog</report>
                                    <report>file-activity</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>

                </plugins>
            </reporting>
        </profile>

        <profile>
            <id>dep-junit</id>
            <activation>
                <file>
                    <exists>${basedir}/src/test/java</exists>
                </file>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.assertj</groupId>
                    <artifactId>assertj-core</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jmockit</groupId>
                    <artifactId>jmockit</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>dep-spock</id>
            <activation>
                <file>
                    <exists>${basedir}/src/test/groovy</exists>
                </file>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>cglib</groupId>
                    <artifactId>cglib</artifactId>
                    <version>${cglib.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-all</artifactId>
                    <version>${hamcrest.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.spockframework</groupId>
                    <artifactId>spock-core</artifactId>
                    <version>${spock.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.codehaus.groovy</groupId>
                    <artifactId>groovy-all</artifactId>
                    <version>${groovy.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.objenesis</groupId>
                    <artifactId>objenesis</artifactId>
                    <version>${objenesis.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <!-- Mandatory plugins for using Spock -->
                    <plugin>
                        <!-- The gmavenplus plugin is used to compile Groovy code. To learn more about this plugin,
                        visit https://github.com/groovy/GMavenPlus/wiki -->
                        <groupId>org.codehaus.gmavenplus</groupId>
                        <artifactId>gmavenplus-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>compile</goal>
                                    <goal>testCompile</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.codehaus.gmaven.runtime</groupId>
                                <artifactId>gmaven-runtime-2.0</artifactId>
                                <version>${gmavenplus-plugin.version}</version>
                                <exclusions>
                                    <exclusion>
                                        <groupId>org.codehaus.groovy</groupId>
                                        <artifactId>groovy-all</artifactId>
                                    </exclusion>
                                </exclusions>
                            </dependency>
                            <dependency>
                                <groupId>org.codehaus.groovy</groupId>
                                <artifactId>groovy-all</artifactId>
                                <version>${groovy.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                    <!-- Optional plugins for using Spock -->
                    <!-- Only required if names of spec classes don't match default Surefire patterns (`*Test` etc.) -->
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <useFile>true</useFile>
                            <skipTests>false</skipTests>
                            <includes>
                                <!-- By default only files ending in 'Test' will be included, so also include support for Spock style naming convention -->
                                <!-- Oddly enough for Groovy files, *Spec.groovy does not work, but *Spec.java does -->
                                <include>**/*Test.java</include>
                                <include>**/*Spec.java</include>
                            </includes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>dep-jacoco</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>pre-unit-test</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                                    <propertyName>surefireArgLine</propertyName>
                                </configuration>
                            </execution>
                            <execution>
                                <id>post-unit-test</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                                    <outputDirectory>${unit.tests.coverage.output.directory}</outputDirectory>
                                </configuration>
                            </execution>

                            <execution>
                                <id>pre-integration-test</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
                                    <propertyName>failsafeArgLine</propertyName>
                                </configuration>
                            </execution>
                            <execution>
                                <id>post-integration-test</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
                                    <outputDirectory>${integration.tests.coverage.output.directory}</outputDirectory>
                                </configuration>
                            </execution>

                        </executions>
                    </plugin>

                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <!--suppress MavenModelInspection -->
                            <argLine>${surefireArgLine}</argLine>
                        </configuration>
                    </plugin>

                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <perCoreThreadCount>true</perCoreThreadCount>
                            <threadCount>1</threadCount>
                            <!--suppress MavenModelInspection -->
                            <argLine>${failsafeArgLine}</argLine>
                        </configuration>

                    </plugin>
                </plugins>
            </build>
            <reporting>
                <excludeDefaults>true</excludeDefaults>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco-maven-plugin.version}</version>
                        <reportSets>
                            <reportSet>
                                <inherited>true</inherited>
                                <reports>
                                    <report>report</report>
                                </reports>
                                <configuration>
                                    <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                                    <outputDirectory>${unit.tests.coverage.output.directory}</outputDirectory>
                                </configuration>
                            </reportSet>
                            <reportSet>
                                <inherited>true</inherited>
                                <reports>
                                    <report>report</report>
                                </reports>
                                <configuration>
                                    <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
                                    <outputDirectory>${integration.tests.coverage.output.directory}</outputDirectory>
                                </configuration>
                            </reportSet>
                        </reportSets>
                    </plugin>
                </plugins>
            </reporting>
        </profile>

        <profile>
            <id>dep-log4j</id>
            <activation>
                <file>
                    <exists>${basedir}/src/test/resources/log4j2.xml</exists>
                </file>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                    <version>${slf4j.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-slf4j-impl</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-api</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-core</artifactId>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>dep-logback</id>
            <activation>
                <file>
                    <exists>${basedir}/src/test/resources/logback-test.xml</exists>
                </file>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                    <version>${slf4j.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.slf4j</groupId>
                    <artifactId>jcl-over-slf4j</artifactId>
                    <version>${slf4j.version}</version>
                </dependency>
                <dependency>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-classic</artifactId>
                    <version>${logback.version}</version>
                    <exclusions>
                        <exclusion>
                            <groupId>org.slf4j</groupId>
                            <artifactId>slf4j-api</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <dependency>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-core</artifactId>
                    <version>${logback.version}</version>
                </dependency>

            </dependencies>
        </profile>

        <profile>
            <id>sonar</id>
            <activation>
                <file>
                    <exists>${basedir}/sonar.properties</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sonar-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>read-project-properties</goal>
                                </goals>
                                <configuration>
                                    <files>
                                        <file>${project.root}/sonar.properties</file>
                                    </files>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>sonatype</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <artifactId>maven-deploy-plugin</artifactId>
                            <configuration>
                                <skip>true</skip>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>maxur-sources</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!--
                        Generate -javadoc.jar artifact, required by Maven Central.
                        -->
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>maxur-javadoc</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!-- @see http://www.sonatype.com/books/nexus-book/reference/staging-sect-deployment.html -->
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>${nexus-staging-maven-plugin.version}</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>oss.sonatype.org</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                        </configuration>
                        <executions>
                            <execution>
                                <id>maxur-deploy-to-sonatype</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>deploy</goal>
                                    <goal>release</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>check-dep</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>enforce-property</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireProperty>
                                            <property>env</property>
                                            <message>
                                                You must specify one of the following value of property: dev, qa, prod!
                                            </message>
                                            <regex>(dev|qa|prod)</regex>
                                            <regexMessage>
                                                You must specify one of the following value of property: dev, qa, prod!
                                            </regexMessage>
                                        </requireProperty>
                                        <requireMavenVersion>
                                            <version>[${require.maven.version},)</version>
                                        </requireMavenVersion>
                                        <requireJavaVersion>
                                            <version>[${project.source.compile},)</version>
                                        </requireJavaVersion>
                                        <requireReleaseDeps>
                                            <message>No Snapshots Allowed!</message>
                                            <failWhenParentIsSnapshot>false</failWhenParentIsSnapshot>
                                            <excludes>
                                                <exclude>${snapshot.allowed.artifacts}</exclude>
                                            </excludes>
                                        </requireReleaseDeps>
                                        <requireUpperBoundDeps/>
                                        <DependencyConvergence/>
                                    </rules>
                                    <fail>true</fail>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

    <dependencyManagement>
        <dependencies>

            <!-- DbC -->
            <dependency>
                <groupId>org.jetbrains</groupId>
                <artifactId>annotations</artifactId>
                <version>${annotations.version}</version>
            </dependency>

            <!-- Logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <!-- Forward all SLF4J calls to LOG4J. -->
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j.version}</version>
            </dependency>

            <!-- utils -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>


            <!-- unit testing -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jmockit</groupId>
                <artifactId>jmockit</artifactId>
                <version>${jmockit.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.spockframework</groupId>
                <artifactId>spock-core</artifactId>
                <version>${spock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-all</artifactId>
                <version>${groovy.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.objenesis</groupId>
                <artifactId>objenesis</artifactId>
                <version>${objenesis.version}</version>
                <scope>test</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>kotlin-maven-plugin</artifactId>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <version>${kotlin.version}</version>
                </plugin>

                <plugin>
                    <!-- The gmavenplus plugin is used to compile Groovy code. To learn more about this plugin,
                    visit https://github.com/groovy/GMavenPlus/wiki -->
                    <groupId>org.codehaus.gmavenplus</groupId>
                    <artifactId>gmavenplus-plugin</artifactId>
                    <version>${gmavenplus-plugin.version}</version>
                </plugin>

                <plugin>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>${maven-surefire-report-plugin.version}</version>
                </plugin>

                <plugin>
                    <artifactId>maven-help-plugin</artifactId>
                    <version>${maven-help-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper-maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven-clean-plugin.version}</version>
                </plugin>

                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <configuration>
                        <encoding>${project.source.encoding}</encoding>
                    </configuration>
                    <!-- https://issues.apache.org/jira/browse/MSHARED-325 -->
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.shared</groupId>
                            <artifactId>maven-filtering</artifactId>
                            <version>${maven-filtering.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${project.source.compile}</source>
                        <target>${project.target.compile}</target>
                        <encoding>${project.source.encoding}</encoding>
                        <optimize>true</optimize>
                        <showWarnings>true</showWarnings>
                        <showDeprecation>true</showDeprecation>
                        <compilerArgs>
                            <arg>-Xlint</arg>
                            <!--<arg>-Werror</arg>-->
                            <arg>-Xlint:-path</arg>
                            <!-- @see https://blogs.oracle.com/darcy/entry/bootclasspath_older_source -->
                            <arg>-Xlint:-options</arg>
                            <!-- @see http://netbeans.org/bugzilla/show_bug.cgi?format=multiple&id=208666 -->
                            <!-- this is to avoid a problem with ANTLR and JDK7 -->
                            <arg>-Xlint:-classfile</arg>
                            <!-- ignore APT warnings -->
                            <arg>-Xlint:-processing</arg>
                        </compilerArgs>
                        <testExcludes>
                            <exclude>**/package-info.java</exclude>
                        </testExcludes>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <useFile>false</useFile>
                        <runOrder>random</runOrder>
                        <trimStackTrace>false</trimStackTrace>
                        <failIfNoTests>false</failIfNoTests>
                        <failIfNoSpecifiedTests>true</failIfNoSpecifiedTests>
                        <parallel>all</parallel>
                        <parallelTestsTimeoutInSeconds>0</parallelTestsTimeoutInSeconds>
                        <parallelTestsTimeoutForcedInSeconds>0</parallelTestsTimeoutForcedInSeconds>
                        <perCoreThreadCount>true</perCoreThreadCount>
                        <threadCount>4</threadCount>
                        <excludes>
                            <exclude>**/IT*.java</exclude>
                        </excludes>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <failIfNoSpecifiedTests>false</failIfNoSpecifiedTests>
                        <parallel>all</parallel>
                        <parallelTestsTimeoutInSeconds>0</parallelTestsTimeoutInSeconds>
                        <parallelTestsTimeoutForcedInSeconds>0</parallelTestsTimeoutForcedInSeconds>
                        <perCoreThreadCount>true</perCoreThreadCount>
                        <threadCount>4</threadCount>
                    </configuration>
                    <executions>
                        <execution>
                            <id>integration-test</id>
                            <goals>
                                <goal>integration-test</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>verify</id>
                            <goals>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven-war-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven-assembly-plugin.version}</version>
                </plugin>

                <plugin>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                </plugin>

                <plugin>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin.version}</version>
                </plugin>

                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven-install-plugin.version}</version>
                    <configuration>
                        <createChecksum>true</createChecksum>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${versions-maven-plugin.version}</version>
                    <!-- keep it at 2.1, see #42 -->
                    <configuration>
                        <generateBackupPoms>false</generateBackupPoms>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${maven-site-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.doxia</groupId>
                            <artifactId>doxia-module-markdown</artifactId>
                            <version>${doxia-module-markdown.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <plugin>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>${maven-project-info-reports-plugin.version}</version>
                </plugin>

                <plugin>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${maven-release-plugin.version}</version>
                    <configuration>
                        <tagBase>https://svn.apache.org/repos/asf/continuum/tags</tagBase>
                        <preparationGoals>clean install</preparationGoals>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>default-deploy</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>deploy</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${maven-antrun-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>io.takari.maven.plugins</groupId>
                    <artifactId>takari-lifecycle-plugin</artifactId>
                    <extensions>true</extensions>
                    <version>${takari-lifecycle-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>appassembler-maven-plugin</artifactId>
                    <version>${appassembler-maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <artifactId>maven-invoker-plugin</artifactId>
                    <version>${maven-invoker-plugin.version}</version>
                    <configuration>
                        <mergeUserSettings>true</mergeUserSettings>
                        <cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>
                        <debug>false</debug>
                        <localRepositoryPath>${project.build.directory}/local-repo</localRepositoryPath>
                        <noLog>false</noLog>
                        <postBuildHookScript>verify</postBuildHookScript>
                        <preBuildHookScript>setup</preBuildHookScript>
                        <projectsDirectory>src/it</projectsDirectory>
                        <settingsFile>${basedir}/src/it/settings.xml</settingsFile>
                        <showErrors>true</showErrors>
                        <showVersion>false</showVersion>
                        <streamLogs>true</streamLogs>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>com.github.github</groupId>
                    <artifactId>site-maven-plugin</artifactId>
                    <version>${site-maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.basepom.maven</groupId>
                    <artifactId>duplicate-finder-maven-plugin</artifactId>
                    <version>${duplicate-finder-maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${maven-checkstyle-plugin.version}</version>
                </plugin>

                <plugin>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${maven-pmd-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>findbugs-maven-plugin</artifactId>
                    <version>${findbugs-maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.pitest</groupId>
                    <artifactId>pitest-maven</artifactId>
                    <version>${pitest-maven.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>buildnumber-maven-plugin</artifactId>
                    <version>${buildnumber-maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonar-maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>properties-maven-plugin</artifactId>
                    <version>${properties-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <pushChanges>false</pushChanges>
                    <localCheckout>true</localCheckout>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.scm</groupId>
                        <artifactId>maven-scm-provider-gitexe</artifactId>
                        <version>${maven-scm-provider-gitexe.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>

    </build>

    <reporting>
        <!--
        Rudimentary section, for Maven 2.0 plugins mostly.
        -->
        <excludeDefaults>true</excludeDefaults>
    </reporting>


    <repositories>
        <!--
        AVOID RELEASE repositories
        You should keep it empty in your project.
        @see http://www.sonatype.com/people/2009/02/why-putting-repositories-in-your-poms-is-a-bad-idea/
        -->
    </repositories>
    <pluginRepositories>
        <!--
        AVOID RELEASE pluginRepositories
        You should keep it empty in your project.
        @see http://www.sonatype.com/people/2009/02/why-putting-repositories-in-your-poms-is-a-bad-idea/
        -->
        <pluginRepository>
            <id>oss.sonatype.org</id>
            <url>https://oss.sonatype.org/content/groups/public</url>
        </pluginRepository>
    </pluginRepositories>
</project>
